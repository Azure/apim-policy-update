---
name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Check format
        run: npm run format:check

      - name: Lint
        run: npm run lint

      - name: Configure Git (Windows line endings)
        if: runner.os == 'Windows'
        shell: pwsh
        run: git config --global core.autocrlf false

      - name: Type check
        run: npx tsc -p tsconfig.json --noEmit

      - name: Unit tests
        shell: bash
        run: npm run ci-test

      - name: Build (package)
        run: npm run package

      - name: Verify dist is up-to-date (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          if ! git diff --quiet -- dist; then
            echo "::error::dist is not up-to-date. Run 'npm run package' and commit the changes."
            git status --porcelain
            exit 1
          fi

      - name: Verify dist is up-to-date (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          git diff --quiet -- dist
          if ($LASTEXITCODE -ne 0) {
            Write-Error "dist is not up-to-date. Run 'npm run package' and commit the changes."
            git status --porcelain
            exit 1
          }

  test-action:
    name: GitHub Action Self-test (mock)
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Mock test without real Azure resources - safe for CI
      # Note: assumes dist/ is already built and committed
      - name: Test Action with Mock Data
        id: test-action-mock
        uses: ./
        with:
          subscription_id: '00000000-0000-0000-0000-000000000000'
          resource_group: 'mock-resource-group'
          apim_name: 'mock-apim-service'
          policy_manifest_path: 'examples/policy_manifest.yaml'
        continue-on-error: true

      - name: Verify Mock Test Behavior
        run: |
          echo "Mock test completed. Expected to fail when authenticating."
          echo "Important: action loads correctly and validates inputs."
          echo "Authentication failure in CI without credentials is expected."
